#!/usr/bin/env bash
set -euo pipefail

# This script can be called from the web. If this is the case, clone the
# dotfiles repository to the expected install location. Also ensure we're in
# the correct install directory. After this point the install/upgrade
# procedures should be the same.
if [ ! -d ~/dotfiles ]; then
    echo "Cloning repository"
    git clone git@github.com:jamesbehr/dotfiles.git ~/dotfiles
fi

cd ~/dotfiles

# Install the base packages. On a fresh install this will install the packages
# required for this to run, such as GNU Stow.
if [ ! -d ~/.config/backpack ]; then
    echo "Installing base package"
    cp -aR base/.config/backpack ~/.config/backpack
fi

echo "Installing base packages"
./backpack

DOTFILESRC=${DOTFILESRC:-"$HOME/.dotfilesrc"}

if [ ! -f "$DOTFILESRC" ]; then
    echo "Creating default dotfiles configuration"
    cp .dotfilesrc "$DOTFILESRC"
fi

echo "Loading dotfiles configuration"
source "$DOTFILESRC"

# Don't attempt to "fold" trees of symlinks by creating a symlink to a
# directory - always create symlinks to the leaves of the tree. This
# prevents "contamination" of the Git repository when an external
# application writes to a directory that was created by Stow. If we
# symlinked to a directory, any files added to that directory would
# suddenly appear in the repository which is undesired behaviour.
IFS=:
for package in $DOTFILES_PACKAGES; do
    echo "Symlinking $package dotfiles"
	stow --restow --no-folding "$package"
done

# Install any packages required by the installed packages
echo "Installing required packages"
./backpack
